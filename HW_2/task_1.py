# Таблица умножения
# Домашнее задание
# ● Условие
# На вход подается число n.
# ● Задача
# Написать скрипт в любой парадигме, который выводит на экран таблицу умножения всех чисел от 1 до n.
# Обоснуйте выбор парадигм.
# ● Пример вывода:
# 1 * 1 = 1
# 1 * 2 = 2
# 1 * 3 = 3
# 1 * 4 = 4
# 1 * 5 = 5
# 1 * 6 = 6
# ..
# 1 * 9 = 9

# Комментарий к решению:
# Решение может выполнено с использованием только структурной парадигмы, т.к. по условию задачи необходимо лишь вывести
# на экран таблицу умножения, размер которой зависит от поданного на вход числа n. Необходимость повторного
# использования кода не оговорена.
# Однако, поскольку число n не является константой и может меняться в ходе выполнения скрипта (в решении - ввод в
# консоль), то для возможного повторного использования кода и вывода различных вариантов таблицы умножения было
# принято решение обернуть часть кода в функцию print_multiply_table, которая принимает в качестве аргумента число n.
# Соответственно, для этого была использована процедурная парадигма программирования. Ввод числа n и вызов функции
# print_multiply_table реализованы с использованием структурной парадигмы программирования.
# Комментарий: при вводе числа от 1 до 10 выводится аккуратная отформатированная таблица умножения,
# при вводе числа n, большего 10, таблица умножения выглядит уже не столь презентабельно и код требует доработки.

def print_multiply_table(n: int) -> None:
    print(f'\n\t\t\t\t\t\tТАБЛИЦА УМНОЖЕНИЯ')
    print(f'\t\t\t\t\t\t  (от 1 до {n})\n')
    for i in (0, n//2 if n//2 == n/2 else n//2+1):
        for j in range(1, n+1):
            for k in range(1 + i, n//2+2 + i if n//2 != n/2 and i == 0 else n//2+1 + i):
                space = ' ' if len(str(k * j)) == 1 else ''
                if k == 10 and j == 10:
                    mul = f'{k} X {j} = {space}{k * j}'
                elif j == 10:
                    mul = f'{k} X {j}  = {k * j}'
                elif k == 10:
                    mul = f'{k} X {j}  = {space}{k * j}'
                else:
                    mul = f'{k} X {j}   = {space}{k * j}'
                print(mul, end='       ')
            print()
        print()


if __name__ == '__main__':
    n = abs(int(input('Введите число n, до которого будет выведена таблица умножения: ')))
    print_multiply_table(n)