# Задача
# Написать игру в “Крестики-нолики”. Можете использовать любые парадигмы, которые посчитаете наиболее подходящими.
# Можете реализовать доску как угодно - как одномерный массив или двумерный массив (массив массивов).
# Можете использовать как правила, так и хардкод, на своё усмотрение.
# Главное, чтобы в игру можно было поиграть через терминал с вашего компьютера.

# Вариант 1. Решение с помощью внешней библиотеки tictactoe
# В основном используется декларативная парадигма (класс Board, его свойства и методы).
# Достаточно найти соответствующую библиотеку, ознакомиться с документацией и можно сделать упрощенный
# (но, тем не менее, рабочий) вариант игры. Внести изменения в алгоритм работы внешней библиотеки весьма затруднительно.
# Это серьёзный недостаток данного подхода. Алгоритм программы реализован с помощью структурной парадигмы.

from tictactoe import Board

print('Игра Крестики-нолики')
# можно задать количество строк, столбцов и минимальное кол-во подряд идущих символов, необходимое для победы
row = 3
col = 3
win_pos = 3
board = Board((row, col), win_pos)
board.create_board()
count = 0
print(board)

while True:
    while True:
        # Получаем координаты хода от игрока
        attempt = input(f'Игрок {board.turn}, введите координаты (два числа, разделённые пробелом) -> ')
        if attempt.find(' ') != -1:
            attempt = attempt.split(' ')
            attempt = tuple(map(lambda x: int(x) if x.isdigit() else -1, attempt))
            if attempt[0] in range(row) and attempt[1] in range(col):
                break
    try:
        # фиксируем ход на доске
        board.push(attempt)
        print(board)
        count += 1
        # т.к. в библиотеке нет варианта "НИЧЬЯ" при заполнении всего поля, то надо считать ходы и контролировать
        # row * col, чтобы не переписывать код tictactoe
        if count == row * col:
            print('Боевая ничья!')
            break
        elif board.result() is not None:
            print(f'Игра окончена. Выиграл игрок {board.result()}!')
            break
    except:
        print('Место занято!')